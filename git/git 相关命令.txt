如果git status告诉你有文件被修改过，用git diff可以查看修改内容。如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：


git log 用于查看历史提交记录（也就是可以看到每次提交的注释）

 git reset --hard HEAD^ 用来退还到上一个版本 上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。


git reset --hard 3628164 （commit id）  用来回到相应的版本



要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本


第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。



git status 出现
Changes not staged for commit:是代表修改了但是未提交

Untracked files: 是代表了未添加到暂存区

如果你又没有对工作区做任何修改，那么工作区就是“干净”的：
nothing added to commit but untracked files present (use "git add" to track)



Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加入到commit中。



命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态

git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。



 创建 ssh key 

ssh-keygen -t rsa -C "1111@qq.com"



git remote add hsg https://user@passwordgithub.com/hsg593718753/hsg.git
